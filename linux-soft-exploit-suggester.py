#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# Linux Soft Exploit Suggester
# Search Exploitable Software
# belane 2017

import re
import os
import argparse
import csv
import platform

def loadVulns(file):
    file_vulns = open(file, 'rb')
    reader = csv.reader(file_vulns)
    vulns_list = list(reader)
    file_vulns.close()
    return vulns_list

def parseDebian(file):
    result = {}
    for line in file:
        if args.clean==True: c = 0
        else: c = 1
        if args.clean==True or line[:2] == 'ii':
            l = line.split()
            # Software
            n = l[c].find(':')
            if n != -1:
                so = l[c][:n]
            else:
                so = l[c]
            # Version
            n = re.search(r"-|\+|~",l[c+1])
            if n:
                v = l[c+1][:n.span()[0]]
            else:
                v = l[c+1]
            n = v.find(':')
            if n != -1:
                v = v[n+1:]
            result[so]=v
    return result

def parseRedhat(file):
    result = {}
    for line in file:
        l = '.'.join(line.split('.')[:-2])
        l = l.split('-')
        so = '-'.join(l[:-2])
        v = l[-2]
        result[so]=v
    return result

def versionVar(v):
    if args.level == 1: r = v
    elif args.level == 2:
        if '.' in v: r = '.'.join(v.split('.')[:-1])
        else: r = v[:4]
    elif args.level == 3: r = ''
    if r == '0': r = v[:3]
    return r

def searchExploit(vulns_list,s,v):
    for vuln in vulns_list:
        if vuln[5]!='windows' and (args.dos or vuln[6]!='dos'):
            n = re.search('(^|\s)' + s.replace('+', '\+') + '\s.{0,2}' + versionVar(v) + '.*', vuln[2],re.IGNORECASE)
            if n:
                print '[+]\033[0;32m', vuln[2],'\033[0m' + vuln[5] + ':' + vuln[6]
                print '\t', 'From:', s, v
                print '\t', 'File: /usr/share/exploitdb/' + vuln[1]
                print '\t', 'Url: https://www.exploit-db.com/exploits/' + vuln[0]



if __name__ == "__main__":
    # BANNER
    print('\033[95m' + """
    LINUX SOFTWARE EXPLOIT SUGESTER  v0.3
    """ + '\033[0m')
    # ARGS
    parser = argparse.ArgumentParser(description='Linux Exploitable Software Suggester')
    parser.add_argument('-f', '--file', type=str, required=True, help='packages file list')
    parser.add_argument('--clean', action='store_true', help='use clean packages list')
    parser.add_argument('--db', help='vulnerabilities csv file')
    parser.add_argument('-d','--distribution', type=str, metavar="[debian|centos]", choices=set(('debian','redhat')), default='debian', help='linux flavor. default "debian"')
    parser.add_argument('--dos', action='store_true', help='include DoS exploits')
    parser.add_argument('-l','--level', type=int, choices=set((1,2,3)), default=1, metavar="[1-3]", help='generic version check. default 1')
    args = parser.parse_args()

    if not os.path.isfile(args.file):
        print "File not found!"
        exit()

    vulns_db='files.csv'
    if platform.dist()[0] == 'Kali': vulns_db='/usr/share/exploitdb/files.csv'
    if args.db: vulns_db=args.db
    if not os.path.isfile(vulns_db):
        print "Vuln DB not found!"
        exit()

    file_packages = open(args.file,'r')
    if args.distribution == 'redhat':
        soft = parseRedhat(file_packages)
    else:
        soft = parseDebian(file_packages)
    file_packages.close()
    vulns_list = loadVulns(vulns_db)
    for s, v in soft.items():
        searchExploit(vulns_list,s,v)
